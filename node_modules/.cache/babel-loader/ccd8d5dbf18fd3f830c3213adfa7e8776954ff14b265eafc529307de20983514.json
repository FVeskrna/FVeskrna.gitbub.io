{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Filip Ve\\u0161krna\\\\portfolio-site-fv\\\\src\\\\Components\\\\ProjectDetail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  id: 1,\n  title: 'VR Meeting Room',\n  description: 'This project focuses on the design and implementation of a cross-platform VR application using Unity3D. The application connects users in a virtual environment for presentations mimicking real-world functions. Users can join via a computer using a keyboard and mouse or with a VR headset for enhanced features. The app features three distinct scenes for various uses, including presentations, writing on a virtual whiteboard, and showcasing virtual replicas of physical devices. The flexible design allows for the creation of additional scenes to leverage these functionalities.',\n  image: '/path-to-image1.jpg',\n  tags: ['VR', 'Unity3D', 'C#', 'Networking'],\n  youtubeLinks: ['https://www.youtube.com/watch?v=dQw4w9WgXcQ'],\n  githubLink: 'https://github.com/your-repo/vr-meeting-room'\n}, {\n  id: 2,\n  title: 'Reddit Video Montage Bot',\n  description: 'This project showcases my transition to Fintech.This project highlights my expertise in Python, APIs, and process automation. I developed a script that automates the entire workflow of downloading popular videos from specified subreddits on Reddit using API calls and user-defined filters. These videos are then edited, resized, reformatted, and compiled into a single montage. Utilizing the Google API, the script automatically uploads the final video to a designated YouTube channel. The script is highly customizable, allowing users to specify various parameters for both the source videos and the final montage.',\n  image: '/path-to-image2.jpg',\n  tags: ['Python', 'API', 'Automation'],\n  youtubeLinks: ['https://www.youtube.com/watch?v=dQw4w9WgXcQ'],\n  githubLink: 'https://github.com/your-repo/vr-meeting-room'\n}, {\n  id: 3,\n  title: 'VR workshop',\n  description: 'This VR application simulates a real-life workshop, allowing users to experience a \"sandbox\" version where they can shape a plank of wood to their needs and connect them using nails or screws to create woodworking objects. The application includes a blueprint system, guiding users through material selection and product creation. An additional feature allows users to assemble an electronic product from given parts, showcasing the application versatility.',\n  image: '/path-to-image3.jpg',\n  tags: ['VR', 'Unity3D', 'C#'],\n  youtubeLinks: ['https://www.youtube.com/watch?v=dQw4w9WgXcQ'],\n  githubLink: 'https://github.com/your-repo/vr-meeting-room'\n}];\nconst ProjectDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const project = projects.find(proj => proj.id === parseInt(id));\n  if (!project) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Project not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(DetailContainer, {\n    children: [/*#__PURE__*/_jsxDEV(DetailTitle, {\n      children: project.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DetailDescription, {\n      children: project.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DetailTags, {\n      children: project.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(Tag, {\n        children: tag\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), project.youtubeLinks && project.youtubeLinks.length > 0 && /*#__PURE__*/_jsxDEV(VideoSection, {\n      children: project.youtubeLinks.map((link, index) => /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: link,\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true,\n        title: `Video ${index + 1}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), project.githubLink && /*#__PURE__*/_jsxDEV(GitHubLink, {\n      href: project.githubLink,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: \"View on GitHub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectDetail, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = ProjectDetail;\nconst DetailContainer = styled.div`\n  padding: 2rem;\n  background: #1a1a2e;\n  color: #fff;\n  max-width: 800px;\n  margin: 0 auto;\n  text-align: center;\n`;\n_c2 = DetailContainer;\nconst DetailTitle = styled.h1`\n  margin-bottom: 1rem;\n`;\n_c3 = DetailTitle;\nconst DetailDescription = styled.p`\n  color: #ccc;\n`;\n_c4 = DetailDescription;\nconst DetailTags = styled.div`\n  margin-top: 1rem;\n  margin-bottom: 2rem;\n`;\n_c5 = DetailTags;\nconst Tag = styled.span`\n  display: inline-block;\n  background: #e94560;\n  color: #fff;\n  padding: 0.3rem 0.6rem;\n  border-radius: 4px;\n  margin-right: 0.5rem;\n  margin-top: 0.5rem;\n  font-size: 0.9rem;\n`;\n_c6 = Tag;\nconst VideoSection = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 1rem;\n  margin-bottom: 2rem;\n`;\n_c7 = VideoSection;\nconst GitHubLink = styled.a`\n  display: inline-block;\n  margin-top: 1rem;\n  padding: 0.5rem 1rem;\n  background: #e94560;\n  color: #fff;\n  text-decoration: none;\n  border-radius: 4px;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #d23a54;\n  }\n`;\n_c8 = GitHubLink;\nexport default ProjectDetail;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"ProjectDetail\");\n$RefreshReg$(_c2, \"DetailContainer\");\n$RefreshReg$(_c3, \"DetailTitle\");\n$RefreshReg$(_c4, \"DetailDescription\");\n$RefreshReg$(_c5, \"DetailTags\");\n$RefreshReg$(_c6, \"Tag\");\n$RefreshReg$(_c7, \"VideoSection\");\n$RefreshReg$(_c8, \"GitHubLink\");","map":{"version":3,"names":["React","useParams","styled","jsxDEV","_jsxDEV","projects","id","title","description","image","tags","youtubeLinks","githubLink","ProjectDetail","_s","project","find","proj","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","DetailContainer","DetailTitle","DetailDescription","DetailTags","map","tag","index","Tag","length","VideoSection","link","width","height","src","frameBorder","allow","allowFullScreen","GitHubLink","href","target","rel","_c","div","_c2","h1","_c3","p","_c4","_c5","span","_c6","_c7","a","_c8","$RefreshReg$"],"sources":["C:/Users/Filip Ve≈°krna/portfolio-site-fv/src/Components/ProjectDetail.js"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst projects = [\r\n    {\r\n        id: 1,\r\n        title: 'VR Meeting Room',\r\n        description: 'This project focuses on the design and implementation of a cross-platform VR application using Unity3D. The application connects users in a virtual environment for presentations mimicking real-world functions. Users can join via a computer using a keyboard and mouse or with a VR headset for enhanced features. The app features three distinct scenes for various uses, including presentations, writing on a virtual whiteboard, and showcasing virtual replicas of physical devices. The flexible design allows for the creation of additional scenes to leverage these functionalities.',\r\n        image: '/path-to-image1.jpg',\r\n        tags: ['VR', 'Unity3D', 'C#', 'Networking'],\r\n        youtubeLinks: ['https://www.youtube.com/watch?v=dQw4w9WgXcQ'],\r\n        githubLink: 'https://github.com/your-repo/vr-meeting-room'\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Reddit Video Montage Bot',\r\n        description: 'This project showcases my transition to Fintech.This project highlights my expertise in Python, APIs, and process automation. I developed a script that automates the entire workflow of downloading popular videos from specified subreddits on Reddit using API calls and user-defined filters. These videos are then edited, resized, reformatted, and compiled into a single montage. Utilizing the Google API, the script automatically uploads the final video to a designated YouTube channel. The script is highly customizable, allowing users to specify various parameters for both the source videos and the final montage.',\r\n        image: '/path-to-image2.jpg',\r\n        tags: ['Python', 'API', 'Automation'],\r\n        youtubeLinks: ['https://www.youtube.com/watch?v=dQw4w9WgXcQ'],\r\n        githubLink: 'https://github.com/your-repo/vr-meeting-room'\r\n      },\r\n      {\r\n        id: 3,\r\n        title: 'VR workshop',\r\n        description: 'This VR application simulates a real-life workshop, allowing users to experience a \"sandbox\" version where they can shape a plank of wood to their needs and connect them using nails or screws to create woodworking objects. The application includes a blueprint system, guiding users through material selection and product creation. An additional feature allows users to assemble an electronic product from given parts, showcasing the application versatility.',\r\n        image: '/path-to-image3.jpg',\r\n        tags: ['VR', 'Unity3D', 'C#'],\r\n        youtubeLinks: ['https://www.youtube.com/watch?v=dQw4w9WgXcQ'],\r\n        githubLink: 'https://github.com/your-repo/vr-meeting-room'\r\n      }\r\n];\r\n\r\nconst ProjectDetail = () => {\r\n  const { id } = useParams();\r\n  const project = projects.find(proj => proj.id === parseInt(id));\r\n\r\n  if (!project) {\r\n    return <p>Project not found</p>;\r\n  }\r\n\r\n  return (\r\n    <DetailContainer>\r\n      <DetailTitle>{project.title}</DetailTitle>\r\n      <DetailDescription>{project.description}</DetailDescription>\r\n      <DetailTags>\r\n        {project.tags.map((tag, index) => (\r\n          <Tag key={index}>{tag}</Tag>\r\n        ))}\r\n      </DetailTags>\r\n      {project.youtubeLinks && project.youtubeLinks.length > 0 && (\r\n        <VideoSection>\r\n          {project.youtubeLinks.map((link, index) => (\r\n            <iframe\r\n              key={index}\r\n              width=\"560\"\r\n              height=\"315\"\r\n              src={link}\r\n              frameBorder=\"0\"\r\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n              allowFullScreen\r\n              title={`Video ${index + 1}`}\r\n            ></iframe>\r\n          ))}\r\n        </VideoSection>\r\n      )}\r\n      {project.githubLink && (\r\n        <GitHubLink href={project.githubLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          View on GitHub\r\n        </GitHubLink>\r\n      )}\r\n    </DetailContainer>\r\n  );\r\n};\r\n\r\nconst DetailContainer = styled.div`\r\n  padding: 2rem;\r\n  background: #1a1a2e;\r\n  color: #fff;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst DetailTitle = styled.h1`\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst DetailDescription = styled.p`\r\n  color: #ccc;\r\n`;\r\n\r\nconst DetailTags = styled.div`\r\n  margin-top: 1rem;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst Tag = styled.span`\r\n  display: inline-block;\r\n  background: #e94560;\r\n  color: #fff;\r\n  padding: 0.3rem 0.6rem;\r\n  border-radius: 4px;\r\n  margin-right: 0.5rem;\r\n  margin-top: 0.5rem;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst VideoSection = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst GitHubLink = styled.a`\r\n  display: inline-block;\r\n  margin-top: 1rem;\r\n  padding: 0.5rem 1rem;\r\n  background: #e94560;\r\n  color: #fff;\r\n  text-decoration: none;\r\n  border-radius: 4px;\r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: #d23a54;\r\n  }\r\n`;\r\n\r\nexport default ProjectDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}